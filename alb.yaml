AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template for an Application Load Balancer

Parameters:
  VPCStackName:
    Type: String
    Description: Name of the VPC stack
    Default: BankCoreNetwork
  CertificateStackName:
    Type: String
    Description: Name of the Certificate stack
    Default: BankCoreCertificate

Resources:
  IngressALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub '${AWS::StackName}-IngressALB'
      Scheme: internet-facing
      Type: application
      Subnets:
        Fn::Split:
          - ','
          - Fn::ImportValue:
              !Sub '${VPCStackName}-PublicSubnetIds'
      SecurityGroups:
        - !Ref IngressALBSecurityGroup
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '120'

  IngressALBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub '${AWS::StackName} Ingress ALB Security Group'
      VpcId:
        Fn::ImportValue:
          !Sub '${VPCStackName}-VPCId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  IngressListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            StatusCode: '200'
            ContentType: text/plain
            MessageBody: "PONG"
      LoadBalancerArn:
        Ref: IngressALB
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn:
            Fn::ImportValue:
              !Sub '${CertificateStackName}-CertificateArn'

  IngressHTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: '443'
            StatusCode: HTTP_301
      LoadBalancerArn: !Ref IngressALB
      Port: 80
      Protocol: HTTP

  IngressRecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneName:
        Fn::Join:
            - ''
            - - Fn::ImportValue: !Sub '${CertificateStackName}-CertificateDomain'
              - '.'
      Name:
        Fn::Join:
          - '.'
          - - 'ping.dev'
            - Fn::ImportValue:
                !Sub '${CertificateStackName}-CertificateDomain'
      Type: A
      AliasTarget:
        DNSName: !GetAtt IngressALB.DNSName
        HostedZoneId: !GetAtt IngressALB.CanonicalHostedZoneID
# TODO
# - Add listener for 80
# - dualstack